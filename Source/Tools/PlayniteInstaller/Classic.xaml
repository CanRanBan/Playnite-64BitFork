
    <ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    mc:Ignorable="d" >

    <Color x:Key="BlackColor">#FF000000</Color>
    <Color x:Key="WhiteColor">#FFFFFFFF</Color>

    <Color x:Key="TextColor">#f2f2f2</Color>
    <Color x:Key="TextColorDarker">#a3a3a3</Color>
    <Color x:Key="TextColorDark">#000000</Color>
    <Color x:Key="MainColor">#4c4c4c</Color>
    <Color x:Key="MainColorDark">#252422</Color>
    <Color x:Key="HoverColor">#247BA0</Color>
    <Color x:Key="DefaultColor">#FF9BB1C5</Color>
    <Color x:Key="GlyphColor">#55CDFF</Color>
    <Color x:Key="HighlightGlyphColor">#33019fcb</Color>
    <Color x:Key="PopupBackgroundColor">#171e26</Color>
    <Color x:Key="PopupBorderColor">#3e6184</Color>
    <Color x:Key="BackgroundToneColor">#182028</Color>

    <SolidColorBrush x:Key="ControlBackgroundBrush" Color="Transparent" />
    <SolidColorBrush x:Key="TextBrush" Color="{DynamicResource TextColor}" />
    <SolidColorBrush x:Key="TextBrushDarker" Color="{DynamicResource TextColorDarker}" />
    <SolidColorBrush x:Key="TextBrushDark" Color="{DynamicResource TextColorDark}" />
    <SolidColorBrush x:Key="NormalBrush" Color="{DynamicResource MainColor}" />
    <SolidColorBrush x:Key="NormalBrushDark" Color="{DynamicResource MainColorDark}" />
    <SolidColorBrush x:Key="NormalBorderBrush" Color="{DynamicResource MainColor}" />
    <SolidColorBrush x:Key="HoverBrush" Color="{DynamicResource HighlightGlyphColor}" />
    <SolidColorBrush x:Key="GlyphBrush" Color="{DynamicResource GlyphColor}" />
    <SolidColorBrush x:Key="HighlightGlyphBrush" Color="{DynamicResource HighlightGlyphColor}" />
    <SolidColorBrush x:Key="PopupBorderBrush" Color="{DynamicResource PopupBorderColor}" />
    <SolidColorBrush x:Key="TooltipBackgroundBrush" Color="{DynamicResource BackgroundToneColor}" />
    <SolidColorBrush x:Key="ButtonBackgroundBrush" Color="#1c1b19" />

    <sys:Double x:Key="FontSize">14</sys:Double>
    <FontFamily x:Key="FontFamily">Trebuchet MS</FontFamily>
    <Thickness x:Key="PopupBorderThickness">1</Thickness>
    <Thickness x:Key="ControlBorderThickness">1</Thickness>
    <sys:Double x:Key="EllipseBorderThickness">1</sys:Double>
    <CornerRadius x:Key="ControlCornerRadius">1</CornerRadius>

    <LinearGradientBrush  x:Key="PopupBackgroundBrush" StartPoint="0.4,0" EndPoint="0.5,1.2" >
        <GradientStop Color="{DynamicResource MainColorDark}" Offset="0"/>
        <GradientStop Color="{DynamicResource BackgroundToneColor}" Offset="0.9"/>
    </LinearGradientBrush>

    <LinearGradientBrush  x:Key="ExpanderBackgroundBrush" StartPoint="-1,0.5" EndPoint="1.5,1" >
        <GradientStop Color="{DynamicResource MainColor}" Offset="0"/>
        <GradientStop Color="{DynamicResource MainColorDark}" Offset="0.9"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="WindowBackgourndBrush" StartPoint="0.5,-0.2" EndPoint="0.4,1" >
        <GradientStop Color="#1F2933" Offset="0"/>
        <GradientStop Color="{DynamicResource MainColorDark}" Offset="0.4"/>
    </LinearGradientBrush>

    <sys:Double x:Key="GameCoverViewRation">1.4</sys:Double>

    <Style TargetType="Border">
        <Setter Property="SnapsToDevicePixels" Value="True" />
    </Style>

    <Style x:Key="HighlightBorder" TargetType="Border" BasedOn="{StaticResource {x:Type Border}}">
        <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource GlyphBrush}" />
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource GlyphBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="BaseStyle" TargetType="Control">
        <Setter Property="FontSize" Value="{DynamicResource FontSize}" />
        <Setter Property="FontFamily" Value="{DynamicResource FontFamily}" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.5" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="BaseTextBlockStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="{DynamicResource FontSize}" />
        <Setter Property="FontFamily" Value="{DynamicResource FontFamily}" />
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
    </Style>

    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="Background" Value="{DynamicResource ButtonBackgroundBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource GlyphBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}" />
        <Setter Property="BorderThickness" Value="{DynamicResource ControlBorderThickness}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Padding" Value="10,5,10,5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"
                            CornerRadius="{DynamicResource ControlCornerRadius}" Style="{DynamicResource HighlightBorder}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}" />
        <Setter Property="BorderThickness" Value="{DynamicResource ControlBorderThickness}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <BulletDecorator>
                        <BulletDecorator.Bullet>
                            <Border x:Name="BulletBorder" CornerRadius="{DynamicResource ControlCornerRadius}"
                                    BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"
                                    Style="{DynamicResource HighlightBorder}" >
                                <Grid Width="18" Height="18" Background="{DynamicResource NormalBrushDark}">
                                    <Viewbox x:Name="CheckIcon" Visibility="Collapsed">
                                        <TextBlock Text="b" FontFamily="Marlett" Foreground="{DynamicResource GlyphBrush}"
                                                   HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Viewbox>
                                    <Viewbox x:Name="IndeterminateIcon" Visibility="Collapsed" Margin="2">
                                        <TextBlock Text="g" FontFamily="Marlett" Foreground="{DynamicResource GlyphBrush}"
                                                   HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Viewbox>
                                </Grid>
                            </Border>
                        </BulletDecorator.Bullet>
                        <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                            <ContentPresenter RecognizesAccessKey="True" Margin="5,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                        </Border>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="{x:Null}" />
                                <Condition Property="IsThreeState" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" Value="Visible" TargetName="IndeterminateIcon"/>
                        </MultiTrigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Visibility" Value="Visible" TargetName="CheckIcon" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource GlyphBrush}" TargetName="BulletBorder" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource GlyphBrush}" TargetName="BulletBorder" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>    

    <Style TargetType="{x:Type ProgressBar}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Foreground" Value="{DynamicResource GlyphBrush}"/>
        <Setter Property="Background" Value="{DynamicResource NormalBrushDark}"/>
        <Setter Property="BorderThickness" Value="{DynamicResource ControlBorderThickness}"/>
        <Setter Property="Height" Value="20" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{DynamicResource NormalBorderBrush}"
                            CornerRadius="{DynamicResource ControlCornerRadius}">
                        <Grid SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <Rectangle Fill="{TemplateBinding Background}" />
                            <Rectangle Name="PART_Track" Margin="0" />
                            <Decorator x:Name="PART_Indicator" HorizontalAlignment="Left" VerticalAlignment="Stretch">
                                <Grid>
                                    <Rectangle Fill="{TemplateBinding Foreground}" />
                                    <Grid x:Name="Animation" Visibility="Hidden">
                                        <Rectangle Fill="{TemplateBinding Background}" Margin="0,0,50,0">
                                            <Rectangle.RenderTransform>
                                                <ScaleTransform x:Name="HiderPreTransform" ScaleX="0"/>
                                            </Rectangle.RenderTransform>
                                        </Rectangle>
                                        <Rectangle Fill="{TemplateBinding Background}" RenderTransformOrigin="1, 0" Margin="50,0,0,0">
                                            <Rectangle.RenderTransform>
                                                <ScaleTransform x:Name="HiderPostTransform" ScaleX="1" />
                                            </Rectangle.RenderTransform>
                                        </Rectangle>
                                    </Grid>
                                </Grid>
                            </Decorator>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsIndeterminate" Value="True">
                            <Setter TargetName="Animation" Property="Visibility" Value="Visible" />
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard RepeatBehavior="Forever">
                                        <DoubleAnimation Storyboard.TargetName="HiderPreTransform" Storyboard.TargetProperty="(ScaleTransform.ScaleX)"
                                                         To="1" Duration="0:00:4" AutoReverse="True"/>
                                        <DoubleAnimation Storyboard.TargetName="HiderPostTransform" Storyboard.TargetProperty="(ScaleTransform.ScaleX)"
                                                         To="0" Duration="0:00:4" AutoReverse="True"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="AllowDrop" Value="True" />
        <Setter Property="CaretBrush" Value="{DynamicResource TextBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
        <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}"/>
        <Setter Property="BorderThickness" Value="{DynamicResource ControlBorderThickness}" />
        <Setter Property="Padding" Value="3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="Border" BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}" CornerRadius="{DynamicResource ControlCornerRadius}"
                            Style="{DynamicResource HighlightBorder}">
                        <ScrollViewer x:Name="PART_ContentHost"
                                      VerticalScrollBarVisibility="{TemplateBinding VerticalScrollBarVisibility}"
                                      HorizontalScrollBarVisibility="{TemplateBinding HorizontalScrollBarVisibility}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource GlyphBrush}" TargetName="Border" />
                        </Trigger>
                        <Trigger Property="IsReadOnly" Value="True">
                            <Setter Property="Opacity" Value="0.8"  />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>    

    <Style TargetType="{x:Type Popup}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="AllowsTransparency" Value="True" />
    </Style>    

    <Style TargetType="{x:Type Hyperlink}">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Foreground" Value="{DynamicResource GlyphBrush}" />
        <Setter Property="TextDecorations" Value="{x:Null}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource TextBrushDarker}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type ToolTip}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Background" Value="{DynamicResource TooltipBackgroundBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="BorderBrush" Value="{DynamicResource PopupBorderBrush}" />
        <Setter Property="BorderThickness" Value="{DynamicResource PopupBorderThickness}" />
    </Style>

    <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="4" x:Name="CollapsedIcon" FontFamily="Marlett"
                                       VerticalAlignment="Center" HorizontalAlignment="Center"
                                       Style="{DynamicResource BaseTextBlockStyle}"
                                       Foreground="{DynamicResource GlyphBrush}" FontSize="18" MinWidth="20" Margin="0,0,5,0"
                                       Grid.Column="0" TextAlignment="Center" />
                            <TextBlock Text="6" x:Name="ExpandedIcon" FontFamily="Marlett"
                                       VerticalAlignment="Center" HorizontalAlignment="Center"
                                       Style="{DynamicResource BaseTextBlockStyle}"
                                       Foreground="{DynamicResource GlyphBrush}" FontSize="18" MinWidth="20" Margin="0,0,5,0"
                                       Visibility="Collapsed"
                                       Grid.Column="0" TextAlignment="Center"/>
                            <ContentPresenter Grid.Column="1" VerticalAlignment="Center"
                                              SnapsToDevicePixels="True" HorizontalAlignment="Stretch" RecognizesAccessKey="True"  />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Visibility" TargetName="ExpandedIcon" Value="Visible" />
                            <Setter Property="Visibility" TargetName="CollapsedIcon" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" Value="0.75" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Expander}">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <DockPanel>
                        <ToggleButton BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                                      Style="{DynamicResource ExpanderDownHeaderStyle}"
                                      Padding="{TemplateBinding Padding}"
                                      MinHeight="25" DockPanel.Dock="Top"
                                      Background="{TemplateBinding Background}"
                                      Content="{TemplateBinding Header}"
                                      IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
                        <Border x:Name="Border" DockPanel.Dock="Top" Visibility="Collapsed"
                                BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                            <ContentPresenter Focusable="False"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"  />
                        </Border>
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="true">
                            <Setter Property="Visibility" TargetName="Border" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
